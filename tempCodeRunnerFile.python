"""
import math

def is_periodic(f, p, tolerance=1e-10):
    for x in range(1, 11):
        if abs(f(x) - f(x + p)) > tolerance:
            return False
    return True
#cos(3 pi t/4)+sin(7 pi t/2)
# Define sin(x) + cos(2x) and a period to test
def f(x):
    return math.cos(3*x*math.pi/4) + math.sin(7*math.pi*x/2)

p = 2*math.pi

# Check if sin(x) + cos(2x) is periodic with period p
if is_periodic(f, p):
    print("periodic with period", p)
else:
    print("not periodic with period", p)
"""

import numpy as np

def find_period(f, x0=0, tol=1e-2):
    """
    Finds the period of the function f using the bisection method,
    starting from the point x0 and with a tolerance of tol.
    """
    a, b = x0, x0 + tol
    fa, fb = f(a), f(b)
    while np.sign(fa) == np.sign(fb):
        b += tol
        fb = f(b)
    x = (a + b) / 2
    while abs(f(x) - f(x + tol)) > tol:
        if np.sign(f(x)) == np.sign(f(x + tol)):
            a = x
        else:
            b = x
        x = (a + b) / 2
    return tol + x - x0

import math

def f(x):
    #(math.cos(3*x*math.pi/4) + math.sin(7*math.pi*x/2))
    #math.sin(x) + math.cos(2*x)
    return math.cos(2*x)

period = find_period(f)
print("The period of f(x) is", period)